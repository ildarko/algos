/*
TC: O(n), MC: O(n)
*/

/* Tests
null, 1
[], 1
[1, 2], 3
overflow int
[1, 2, 4 ,5], 6
*/

public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Dictionary<int, int> store = new(nums.Length);
        
        for (int index = 0; index < nums.Length; index++)
        {
            int curNum = nums[index];
            
            if (store.TryGetValue(target - curNum, out int index2))
            {
                return new int[] { index, index2 };
            }            
            
            if (!store.ContainsKey(curNum))
            {
                store.Add(curNum, index);
            }
        }
        
        return new int[0];
    }
}